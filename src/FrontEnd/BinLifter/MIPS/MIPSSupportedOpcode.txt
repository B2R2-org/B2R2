/// Floating Point Absolute Value.
ABS
/// Add Word.
ADD
/// Add Immediate Word.
ADDI
/// Add Immediate Unsigned Word.
ADDIU
/// Add Immediate to PC.
ADDIUPC
/// Add Unsigned Word.
ADDU
/// Concatenate two GPRs, and extract a contiguous subset at a byte position.
ALIGN
/// Float Point Align Variable.
ALNVPS
/// Aligned Add Upper Immediate to PC.
ALUIPC
/// And.
AND
/// And immediate.
ANDI
/// Add Immediate to Upper Bits.
AUI
/// Add Upper Immediate to PC.
AUIPC
/// Unconditional Branch.
B
/// Branch and Link.
BAL
/// Branch and Link, Compact.
BALC
/// Branch, Compact.
BC
/// Branch if Coprocessor 1 (FPU) Register Bit 0 Equal to Zero.
BC1EQZ
/// Branch if Coprocessor 1 (FPU) Register Bit 0 Not Equal to Zero.
BC1NEZ
/// Branch on FP False.
BC1F
/// Branch on FP False Likely.
BC1FL
/// Branch on FP True.
BC1T
/// Branch on FP True Likely.
BC1TL
/// Branch if Coprocessor 2 Condition Register Equal to Zero.
BC2EQZ
/// Branch if Coprocessor 2 Condition Register Not Equal to Zero.
BC2NEZ
/// Branch on COP2 False.
BC2F
/// Branch on COP2 False Likely.
BC2FL
/// Branch on COP2 True.
BC2T
/// Branch on COP2 True Likely.
BC2TL
/// Branch on COP3 False.
BC3F
/// Branch on COP3 False Likely.
BC3FL
/// Branch on COP3 True.
BC3T
/// Branch on COP3 True Likely.
BC3TL
/// Branch on Equal.
BEQ
/// Branch on Equal Likely.
BEQL
/// Branch on Greater Than or Equal to Zero.
BGEZ
/// Branch on Greater Than or Equal to Zero and Link.
BGEZAL
/// Compact Zero-Compare and Branch-and-Link if less than or equal to zero.
BLEZALC
/// Compact Zero-Compare and Branch-and-Link if less than zero.
BLTZALC
/// Compact Zero-Compare and Branch-and-Link if greater than or equal to zero.
BGEZALC
/// Compact Zero-Compare and Branch-and-Link if greater than zero.
BGTZALC
/// Compact Zero-Compare and Branch-and-Link if equal to zero.
BEQZALC
/// Compact Zero-Compare and Branch-and-Link if not equal to zero.
BNEZALC
/// Branch on Greater Than or Equal to Zero and Link Likely.
BGEZALL
/// Compact Compare-and-Branch if less than or equal to zero.
BLEZC
/// Compact Compare-and-Branch if greater than or equal to zero.
BGEZC
/// Compact Compare-and-Branch if greater than or equal to.
BGEC
/// Compact Compare-and-Branch if greater than zero.
BGTZC
/// Compact Compare-and-Branch if less than zero.
BLTZC
/// Compact Compare-and-Branch if less than.
BLTC
/// Compact Compare-and-Branch if unsigned greater or equal to.
BGEUC
/// Compact Compare-and-Branch if unsigned less than.
BLTUC
/// Compact Compare-and-Branch if equal to.
BEQC
/// Compact Compare-and-Branch if not equal to.
BNEC
/// Compact Compare-and-Branch if equal to zero.
BEQZC
/// Compact Compare-and-Branch if not equal to zero.
BNEZC
/// Branch on Greater than or Equal to Zero Likely.
BGEZL
/// Branch on Greater Than Zero.
BGTZ
/// Branch on Greater Than Zero Likely.
BGTZL
/// Swaps (reverses) bits in each byte.
BITSWAP
/// Branch on Less Than or Equal to Zero.
BLEZ
/// Branch on Less Than or Equal to Zero Likely.
BLEZL
/// Branch on Less Than Zero.
BLTZ
/// Branch on Less Than Zero and Link.
BLTZAL
/// Branch on Less Than Zero and Link Likely.
BLTZALL
/// Branch on Less Than Zero Likely.
BLTZL
/// Branch on Not Equal.
BNE
/// Branch on Not Equal Likely.
BNEL
/// Branch on Overflow, Compact.
BOVC
/// Branch on No Overflow, Compact.
BNVC
/// Breakpoint.
BREAK
/// Floating Point Compare.
C
/// Perform Cache Operation.
CACHE
/// Perform Cache Operation EVA.
CACHEE
/// Fixed Point Ceiling Convert to Long Fixed Point.
CEILL
/// Fixed Point Ceiling Convert to Word Fixed Point.
CEILW
/// Move Control Word From Floating Point.
CFC1
/// Move Control Word From Coprocessor 2.
CFC2
/// Scalar Floating-Point Class Mask.
CLASS
/// Count Leading Ones in Word.
CLO
/// Count Leading Zeros in Word.
CLZ
/// Floating Point Compare Setting Mask.
CMP
/// Coprocessor Operation to Coprocessor 2.
COP2
/// Generate CRC with reversed polynomial 0xEDB88320.
CRC32B
/// Generate CRC with reversed polynomial 0xEDB88320.
CRC32H
/// Generate CRC with reversed polynomial 0xEDB88320.
CRC32W
/// Generate CRC with reversed polynomial 0x82F63B78.
CRC32CB
/// Generate CRC with reversed polynomial 0x82F63B78.
CRC32CH
/// Generate CRC with reversed polynomial 0x82F63B78.
CRC32CW
/// Move Control Word to Floating Point.
CTC1
/// Move Control Word to Coprocessor 2.
CTC2
/// Floating Point Convert to Double Floating Point.
CVTD
/// Floating Point Convert to Long Fixed Point.
CVTL
/// Floating Point Convert Pair to Paired Single.
CVTPSS
/// Floating Point Convert to Single Floating Point.
CVTS
/// Floating Point Convert Pair Lower to Single Floating Point.
CVTSPL
/// Floating Point Convert Pair Upper to Single Floating Point.
CVTSPU
/// Floating Point Convert to Word Fixed Point.
CVTW
/// Doubleword Add Immediate Unsigned.
DADDIU
/// Doubleword Add Unsigned.
DADDU
/// Concatenate two GPRs, and extract a contiguous subset at a byte position.
DALIGN
/// Swaps (reverses) bits in each byte.
DBITSWAP
/// Count Leading Zeros in Doubleword.
DCLZ
/// Doubleword Divide.
DDIV
/// Doubleword Divide Unsigned.
DDIVU
/// Debug Exception Return.
DERET
/// Doubleword Extract Bit Field.
DEXT
/// Doubleword Extract Bit Field Middle.
DEXTM
/// Doubleword Extract Bit Field Upper.
DEXTU
/// Disable Interrupts.
DI
/// Doubleword Insert Bit Field.
DINS
/// Doubleword Insert Bit Field Middle.
DINSM
/// Doubleword Insert Bit Field Upper.
DINSU
/// Divide Word.
DIV
/// Modulo Words.
MOD
/// Divide Words Unsigned.
DIVU
/// Modulo Words Unsigned.
MODU
/// Disable Virtual Processor.
DVP
/// Doubleword Move from Floating Point.
DMFC1
/// Doubleword Move to Floating Point.
DMTC1
/// Doubleword Multiply.
DMULT
/// Doubleword Multiply Unsigned.
DMULTU
/// Doubleword Rotate Right.
DROTR
/// Doubleword Rotate Right Plus 32.
DROTR32
/// Doubleword Rotate Right Variable.
DROTRV
/// Doubleword Swap Bytes Within Halfwords.
DSBH
/// Doubleword Swap Halfwords Within Doublewords.
DSHD
/// Doubleword Shift Left Logical.
DSLL
/// Doubleword Shift Left Logical Plus 32.
DSLL32
/// Doubleword Shift Left Logical Variable.
DSLLV
/// Doubleword Shift Right Arithmetic.
DSRA
/// Doubleword Shift Right Arithmetic Plus 32.
DSRA32
/// Doubleword Shift Right Arithmetic Variable.
DSRAV
/// Doubleword Shift Right Logical.
DSRL
/// Doubleword Shift Right Logical Plus 32.
DSRL32
/// Doubleword Shift Right Logical Variable.
DSRLV
/// Doubleword Subtract Unsigned.
DSUBU
/// Execution Hazard Barrier.
EHB
/// Enable Interrupts.
EI
/// Exception Return.
ERET
/// Exception Return No Clear.
ERETNC
/// Enable Virtual Processor.
EVP
/// Extract Bit Field.
EXT
/// Floating Point Floor Convert to Long Fixed Point.
FLOORL
/// Floating Point Floor Convert to Word Fixed Point.
FLOORW
/// Global Invalidate Instruction Cache.
GINVI
/// Global Invalidate TLB.
GINVT
/// Insert Bit Field.
INS
/// Jump.
J
/// Jump and Link.
JAL
/// Jump and Link Register.
JALR
/// Jump and Link Register with Hazard Barrier.
JALRHB
/// Jump and Link Exchange.
JALX
/// Jump Indexed and Link, Compact.
JIALC
/// Jump Indexed, Compact.
JIC
/// Jump Register.
JR
/// Jump Register with Hazard Barrier.
JRHB
/// Load Byte.
LB
/// Load Byte EVA.
LBE
/// Load Byte Unsigned.
LBU
/// Load Byte Unsigned EVA.
LBUE
/// Load Doubleword.
LD
/// Load Doubleword to Floating Point.
LDC1
/// Load Doubleword to Coprocessor 2.
LDC2
/// Load Doubleword Left.
LDL
/// Load Doubleword Right.
LDR
/// Load Doubleword Indexed to Floating Point.
LDXC1
/// Load Halfword.
LH
/// Load Halfword EVA.
LHE
/// Load Halfword Unsigned.
LHU
/// Load Halfword Unsigned EVA.
LHUE
/// Load Linked Word.
LL
/// Load Linked Doubleword.
LLD
/// Load Linked Word EVA.
LLE
/// Load Linked Word Paired.
LLWP
/// Load Linked Word Paired EVA.
LLWPE
/// Load Scaled Address.
LSA
/// Load Upper Immediate.
LUI
/// Load Doubleword Indexed Unaligned to Floating Point.
LUXC1
/// Load Word.
LW
/// Load Word to Floating Point.
LWC1
/// Load Word to Coprocessor 2.
LWC2
/// Load Word EVA.
LWE
/// Load Word Left.
LWL
/// Load Word Left EVA.
LWLE
/// Load Word PC-relative.
LWPC
/// Load Word Right.
LWR
/// Load Word Right EVA.
LWRE
/// Load Word Unsigned.
LWU
/// Load Word Indexed to Floating Point.
LWXC1
/// Multiply and Add Word to Hi, Lo.
MADD
/// Floating Point Fused Multiply Add.
MADDF
/// Floating Point Fused Multiply Sub.
MSUBF
/// Multiply and Add Unsigned Word to Hi,Lo.
MADDU
/// Scalar Floating-Point Max.
MAX
/// Scalar Floating-Point Min.
MIN
/// Scalar Floating-Point argument with Max Absolute Value.
MAXA
/// Scalar Floating-Point argument with Min Absolute Value.
MINA
/// Move from Coprocessor 0.
MFC0
/// Move Word From Floating Point.
MFC1
/// Move Word From Coprocessor 2.
MFC2
/// Move from High Coprocessor 0.
MFHC0
/// Move Word From High Half of Floating Point Register.
MFHC1
/// Move Word From High Half of Coprocessor 2 Register.
MFHC2
/// Move From HI Register.
MFHI
/// Move From LO Register
MFLO
/// Floating Point Move.
MOV
/// Move Conditional on Floating Point False.
MOVF
/// Move Conditional on Not Zero.
MOVN
/// Move Conditional on Floating Point True.
MOVT
/// Move Conditional on Zero.
MOVZ
/// Floating Point Multiply Subtract.
MSUB
/// Multiply and Subtract Word to Hi,Lo.
MSUBU
/// Move to Coprocessor 0.
MTC0
/// IMove Word to Floating Point.
MTC1
/// Move Word to Coprocessor 2.
MTC2
/// Move to High Coprocessor 0.
MTHC0
/// Move Word to High Half of Floating Point Register.
MTHC1
/// Move Word to High Half of Coprocessor 2 Register.
MTHC2
/// Move to HI Register.
MTHI
/// Move to LO Register
MTLO
/// Multiply Word to GPR.
MUL
/// Multiply Words Signed, High Word.
MUH
/// Multiply Words Unsigned, Low Word
MULU
/// Multiply Words Unsigned, High Word
MUHU
/// Multiply Word.
MULT
/// Multiply Unsigned Word.
MULTU
/// No-op and Link.
NAL
/// Floating Point Negate.
NEG
/// Floating Point Negative Multiply Add.
NMADD
/// Floating Point Negative Multiply Subtract.
NMSUB
/// No Operation.
NOP
/// Not Or.
NOR
/// Or.
OR
/// Or Immediate.
ORI
/// Wait for the LLBit to clear.
PAUSE
/// Pair Lower Lower.
PLLPS
/// Pair Lower Upper.
PLUPS
/// Prefetch.
PREF
/// Prefetch EVA.
PREFE
/// Prefetch Indexed.
PREFX
/// Pair Upper Lower.
PULPS
/// Pair Upper Upper.
PUUPS
/// Read Hardware Register.
RDHWR
/// Read GPR from Previous Shadow Set.
RDPGPR
/// Reciprocal Approximation.
RECIP
/// Floating-Point Round to Integral.
RINT
/// Rotate Word Right.
ROTR
/// Rotate Word Right Variable.
ROTRV
/// Floating Point Round to Long Fixed Point.
ROUNDL
/// Floating Point Round to Word Fixed Point.
ROUNDW
/// Reciprocal Square Root Approximation.
RSQRT
/// Store Byte.
SB
/// Store Byte EVA.
SBE
/// Store Conditional Word.
SC
/// Store Conditional Doubleword.
SCD
/// Store Conditional Word EVA.
SCE
/// Store Conditional Word Paired.
SCWP
/// Store Conditional Word Paired EVA.
SCWPE
/// Store Doubleword.
SD
/// Software Debug Breakpoint.
SDBBP
/// Store Doubleword from Floating Point.
SDC1
/// Store Doubleword from Coprocessor 2.
SDC2
/// Store Doubleword Left.
SDL
/// Store Doubleword Right.
SDR
/// Store Doubleword Indexed from Floating Point.
SDXC1
/// Sign-Extend Byte.
SEB
/// Sign-Extend Halfword.
SEH
/// Select floating point values with FPR condition.
SEL
/// Select integer GPR value or zero.
SELEQZ
/// Select integer GPR value or zero.
SELNEZ
/// Select floating point value or zero with FPR condition.
SELNEQZ
/// Store Halfword.
SH
/// Store Halfword EVA.
SHE
/// Signal Reserved Instruction Exception.
SIGRIE
/// Shift Word Left Logical.
SLL
/// Shift Word Left Logical Variable.
SLLV
/// Set on Less Than.
SLT
/// Set on Less Than Immediate.
SLTI
/// Set on Less Than Immediate Unsigned.
SLTIU
/// Set on Less Than Unsigned.
SLTU
/// Floating Point Square Root.
SQRT
/// Shift Word Right Arithmetic.
SRA
/// Shift Word Right Arithmetic Variable.
SRAV
/// Shift Word Right Logical.
SRL
/// Shift Word Right Logical Variable.
SRLV
/// Superscalar No Operation.
SSNOP
/// Subtract Word.
SUB
/// Subtract Unsigned Word.
SUBU
/// Store Doubleword Indexed Unaligned from Floating Point.
SUXC1
/// Store Word.
SW
/// Store Word from Floating Point.
SWC1
/// Store Word from Coprocessor 2.
SWC2
/// Store Word EVA.
SWE
/// Store Word Left.
SWL
/// Store Word Left EVA.
SWLE
/// Store Word Right.
SWR
/// Store Word Right EVA.
SWRE
/// Store Word Indexed from Floating Point.
SWXC1
/// Synchronize Shared Memory.
SYNC
/// Synchronize Caches to Make Instruction Writes Effective
SYNCI
/// System Call.
SYSCALL
/// Trap if Equal.
TEQ
/// Trap if Equal Immediate.
TEQI
/// Trap if Greater or Equal.
TGE
/// Trap if Greater or Equal Immediate.
TGEI
/// Trap if Greater or Equal Immediate Unsigned.
TGEIU
/// Trap if Greater or Equal Unsigned.
TGEU
/// TLB Invalidate.
TLBINV
/// TLB Invalidate Flush.
TLBINVF
/// Probe TLB for Matching Entry.
TLBP
/// Read Indexed TLB Entry.
TLBR
/// Read Indexed TLB Entry.
TLBWI
/// Write Random TLB Entry.
TLBWR
/// Trap if Less Than.
TLT
/// Trap if Less Than Immediate.
TLTI
/// Trap if Less Than Immediate Unsigned.
TLTIU
/// Trap if Less Than Unsigned.
TLTU
/// Trap if Not Equal.
TNE
/// Trap if Not Equal Immediate.
TNEI
/// Floating Point Truncate to Long Fixed Point.
TRUNCL
/// Floating Point Truncate to Word Fixed Point.
TRUNCW
/// Enter Standby Mode.
WAIT
/// Write to GPR in Previous Shadow Set.
WRPGPR
/// Word Swap Bytes Within Halfwords.
WSBH
/// Exclusive OR.
XOR
/// Exclusive OR Immediate.
XORI
/// Invalid Opcode.
InvalOP
